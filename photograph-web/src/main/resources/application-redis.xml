<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <util:properties id="redis" location="classpath:redis.properties" />

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="#{redis['redis.minIdle']}" />
        <property name="maxIdle" value="#{redis['redis.maxIdle']}" />
        <property name="maxTotal" value="#{redis['redis.maxActive']}" />
        <property name="maxWaitMillis" value="#{redis['redis.maxWait']}" />
        <property name="testOnBorrow" value="#{redis['redis.testOnBorrow']}" />
        <property name="testOnReturn" value="#{redis['redis.testOnReturn']}" />
        <property name="testWhileIdle" value="#{redis['redis.testWhileIdle']}" />
        <property name="timeBetweenEvictionRunsMillis"
                  value="#{redis['redis.timeBetweenEvictionRunsMillis']}" />
        <property name="numTestsPerEvictionRun" value="#{redis['redis.numTestsPerEvictionRun']}" />
        <property name="minEvictableIdleTimeMillis"
                  value="#{redis['redis.minEvictableIdleTimeMillis']}" />
        <property name="softMinEvictableIdleTimeMillis"
                  value="#{redis['redis.softMinEvictableIdleTimeMillis']}" />
    </bean>

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="#{redis['redis.host']}" p:port="#{redis['redis.port']}" p:usePool="true"
          p:timeout="#{redis['redis.timeout']}" p:password="#{redis['redis.pass']}" p:database="#{redis['redis.default.db']}"
          p:poolConfig-ref="jedisPoolConfig" />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory"   ref="jedisConnectionFactory" />
        <!--         如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String  -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>

</beans>